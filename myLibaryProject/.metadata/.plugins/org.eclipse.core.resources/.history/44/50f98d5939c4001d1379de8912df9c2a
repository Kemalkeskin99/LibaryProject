package kemalkeskin.rentABook.webApi;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import kemalkeskin.rentABook.business.abstracts.PublisherService;
import kemalkeskin.rentABook.business.requests.publisher.CreatePublisherRequest;
import kemalkeskin.rentABook.business.requests.publisher.UpdatePublisherRequest;
import kemalkeskin.rentABook.business.responses.publisher.GetAllPublisherResponse;
import kemalkeskin.rentABook.business.responses.publisher.GetByIdPublisherResponse;
import lombok.AllArgsConstructor;

@RestController
@RequestMapping("/api/publisher")
@AllArgsConstructor
public class PublishersController {

	private PublisherService publisherService;
	
	@GetMapping("/getall")
	public List<GetAllPublisherResponse> getAll(){
		return publisherService.getAll();
	}
	
	@GetMapping("/{id}")
	public GetByIdPublisherResponse getById(@PathVariable int id) {
		return publisherService.getById(id);
	}
	
	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	public void add(@RequestBody CreatePublisherRequest createPublisherRequest) {
		this.publisherService.add(createPublisherRequest);
	}
	
	@PutMapping("/update")
	public void update(@RequestParam int id, @RequestBody UpdatePublisherRequest updatePublisherRequest) {
		this.publisherService.update(id, updatePublisherRequest);
	}

	@DeleteMapping("/delete")
	public void delete(int id) {
		this.publisherService.delete(id);
	}
}
